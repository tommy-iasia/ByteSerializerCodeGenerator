package com.iasia.code.example;

import com.iasia.buffer.Ascii8;
import com.iasia.buffer.ByteSerializable;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

//don't edit this file as it is auto-generated by ByteSerializerCodeGenerator
//https://github.com/tommy-iasia/ByteSerializerCodeGenerator

public class Example1 implements ByteSerializable {

    public Example1(int key1) {
        this.key1 = key1;
    }
    public Example1(int key1, int abc, String bcd) {
        this.key1 = key1;
        this.abc = abc;
        this.bcd = bcd;
    }

    public final int key1;
    public int abc;
    public String bcd;

    public static Example1 get(int key1, ByteBuffer buffer) {
        var abc = buffer.getInt();
        buffer.get(new byte[2]);
        var bcd = Ascii8.getString(buffer, 5).trim();
    
        return new Example1(key1, abc, bcd);
    }

    @Override
    public ByteBuffer put() {
        var length = length();
        var buffer = ByteBuffer.allocate(length).order(ByteOrder.LITTLE_ENDIAN);
    
        put(buffer);
    
        buffer.flip();
        return buffer;
    }
    @Override
    public int length() {
        return 4 + 2 + 5;
    }
    @Override
    public void put(ByteBuffer buffer) {
        buffer.putInt(abc);
        buffer.put(new byte[2], 0, 2);
        Ascii8.putString(buffer, bcd, 5);
    }

    @Override
    public String toString() {
        return "Example1{"
                + "key1=" + key1
                + "abc=" + abc
                + "bcd=" + bcd
                + "}";
    }
}
